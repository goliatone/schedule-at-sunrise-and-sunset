#!/usr/bin/env node
'use strict';

var program = require('commander'),
    moment = require('moment-timezone'),
    resolve = require('path').resolve,
    SunCalc = require('../lib/at-suncalc-date');

var config = {
    lat: '40.740368',
    lon: '-73.995647',
    date: moment(new Date()).add(1, 'days').startOf('day'),
    timezone: 'America/New_York',
    jobPath: '/usr/local/opt/at-sun',
    sunrise: 'sunrise',
    sunset: 'sunset',
    dryRun: false
};

var pkg = require('../package.json');

program
    .version(pkg.version)
    .description(
        'Register a job to be executed at sunset and sunrise.\n' +
        '  Under the hood it uses the "at" unix command.\n\n' +
        '  If you have not enabled the "atrun" daemon, do so:\n' +
        '  sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.atrun.plist\n\n' +
        '  To calculate sunset and sunrise we can specify a date the form\n' +
        '  "YYYY-MM-DD HH:MM" or any string that is understood by the moment js library.\n\n'
    )
    .option('-ln, --lon [lon]', 'Longitude, used to calculate sun position. Defaults to "' + config.lon + '"', config.lon)
    .option('-lt, --lat [lat]', 'Latitude, used to calculate sun position. Defaults to "' + config.lat + '"', config.lat)
    .option('-d, --date [date]', 'Date to calculate sunrise and sunset. Defaults to "' + config.date + '"', config.date)
    .option('-D, --dry-run', 'Show commands generated but do not register jobs.', false)
    .option('-t, --timezone [date]', 'Relative time zone. Defaults to "' + config.timezone + '"', config.timezone)
    .option('-j, --job-path [jobPath]', 'Absolute path to directory that holds job scripts. Defaults to "' + config.jobPath + '"', config.jobPath)
    .option('-n, --now', 'Use now as a reference date as opposed to new +1 days.', false)
    .option('-s, --sunrise [sunrise]', 'Sunrise script name. Defaults to "' + config.sunrise + '"', config.sunrise)
    .option('-S, --sunset [sunset]', 'Sunset script name. Defaults to "' + config.sunset + '"', config.sunset)
    .parse(process.argv);


var opts = {};

Object.keys(config).map(function(key){
    if(program.hasOwnProperty(key)) opts[key] = program[key];
});

if(program.now) opts.date = moment(new Date());
if(typeof opts.date === 'string') opts.date = new Date(opts.date);
opts.date = moment(opts.date).tz(config.timezone);

SunCalc.execute(opts);
